<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.1.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>wo1261931780</groupId>
	<artifactId>test-MybatisFlex</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>test-MybatisFlex</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>17</java.version>
	</properties>
	<dependencies>
		<!--=============================================================================================-->
		<!--下面两个配置基本地启动，后面的按需修改-->
		<!--=============================================================================================-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<version>3.2.1</version>
		</dependency>
		<!--spring网络WEB-->
		<!--使用Spring
		MVC构建Web，包括RESTful，应用程序。使用Apache Tomcat作为默认的嵌入式容器。-->
		<!--里面已经包含了spring
		MVC的内容-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>3.2.1</version>
			<!--<scope>test</scope>-->
			<!--上面的scope表示作用范围-->
			<!--在没有说明的情况下，scope默认就是compile-->
			<!--如果我把mysql这些数据库驱动jar包设置为runtime-->
			<!--那么我在日常使用的过程中，是无法访问这些类的-->
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.mybatis-flex</groupId>
			<artifactId>mybatis-flex-spring-boot-starter</artifactId>
			<version>1.7.6</version>
		</dependency>
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!--<dependency>-->
		<!--	<groupId>org.yaml</groupId>-->
		<!--	<artifactId>snakeyaml</artifactId>-->
		<!--	<version>2.0</version>-->
		<!--</dependency>-->
		<dependency>
			<groupId>com.github.xiaoymin</groupId>
			<artifactId>knife4j-openapi3-jakarta-spring-boot-starter</artifactId>
			<version>4.5.0</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>3.0.0</version>
		</dependency>

	</dependencies>
	<!--项目有个坑，如果没有配置国内的镜像仓库，会导致拉不到依赖，项目启动失败-->
	<repositories>
		<!--阿里云搭建了一个国内镜像http://maven.aliyun.com，跑起来速度很快，可以进行配置-->
		<repository>
			<id>nexus-aliyun</id>
			<name>nexus-aliyun</name>
			<url>https://maven.aliyun.com/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-releases</id>
			<name>Spring Releases</name>
			<url>https://repo.spring.io/release</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
	</repositories>
	<build>
		<plugins>
			<!--<plugin>-->
			<!--	<groupId>org.springframework.boot</groupId>-->
			<!--	<artifactId>spring-boot-maven-plugin</artifactId>-->
			<!--	<configuration>-->
			<!--		<image>-->
			<!--			<builder>paketobuildpacks/builder-jammy-base:latest</builder>-->
			<!--		</image>-->
			<!--	</configuration>-->
			<!--</plugin>-->
		</plugins>
	</build>

</project>
